{"version":3,"sources":["components/common/Preloader/Preloader.module.css","components/ToDoList/ToDoListTasks/ToDoListTask/ToDoListTask.module.css","components/Header/Header.module.css","components/Login/Login.module.css","components/ToDoList/ToDoListFooter/ToDoListFooter.module.css","components/ToDoList/ToDoListTitle/ToDoListTitle.module.css","components/common/AddNewItemForm/AddNewItemForm.module.css","components/ToDoList/ToDoList.module.css","components/common/DeleteItemForm/DeleteItemForm.module.css","components/ToDoList/ToDoListTasks/ToDoListTasks.module.css","components/common/DeleteItemForm/DeleteItemForm.tsx","components/ToDoList/ToDoListTasks/ToDoListTask/ToDoListTask.tsx","components/ToDoList/ToDoListTasks/ToDoListTasks.tsx","components/ToDoList/ToDoListFooter/ToDoListFooter.tsx","components/common/AddNewItemForm/AddNewItemForm.tsx","components/ToDoList/ToDoListTitle/ToDoListTitle.tsx","api/api.ts","redux/reducer.ts","components/common/Preloader/Preloader.tsx","components/ToDoList/ToDoList.tsx","redux/auth-reducer.ts","components/Login/Login.tsx","components/Header/Header.tsx","App.tsx","serviceWorker.js","redux/store.ts","index.js"],"names":["module","exports","wrapper","message","five","second","like","first","tap-upper-1","tap-upper-2","tap-upper-3","tap-upper-4","todoList-task","editMode","taskInfo","taskTitle","priorityStyle","priorityStyle1","priorityStyle2","priorityStyle3","priorityStyle4","priorityStyle5","done","header","main","error","logout","login","info","input","checkbox","button","todoList-footer","filter-active","todoList-header","todoList-header__title","todoList-newTaskForm","todoList","content","todoList-deleteTaskForm","todoList-tasks","DeleteItemForm","render","react_default","a","createElement","className","styles","onClick","_this","props","delete","id","React","Component","ToDoListTask","state","isEditMode","title","task","priority","onIsDoneChanged","e","changeStatus","currentTarget","checked","onTitleChanged","setState","value","onPriorityChanged","activateEditMode","deActivateEditMode","changeTitle","isStatus","status","isOpacity","concat","Object","assign","snapshot","isDragging","ref","provided","innerRef","draggableProps","dragHandleProps","type","onChange","autoFocus","min","max","common_DeleteItemForm_DeleteItemForm","deleteTask","ToDoListTasks","tasksElements","tasks","map","t","index","react_beautiful_dnd_esm","draggableId","key","ToDoListTasks_ToDoListTask_ToDoListTask","ToDoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","AddNewItemForm","onAddItemClick","newTitle","trim","addItem","onKeyPress","errorClass","placeholder","ToDoListHeader","updateTodolist","onBlur","idList","instance","axios","create","baseURL","withCredentials","headers","API-KEY","api","get","then","res","data","todolistId","post","newTaskTitle","newListTitle","put","todoListId","taskId","putAfterItemId","response","email","password","rememberMe","arguments","length","undefined","captcha","initialState","todolists","isLoading","isLoadingList","setToDoListsError","setTasksError","addToDoListError","addTaskError","updateToDoListError","updateTaskError","deleteToDoListError","deleteTaskSuccess","deleteTaskError","toggleIsLoading","toggleIsLoadingList","setToDoLists","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","catch","stop","_x","apply","this","setTasks","_ref2","_callee2","_context2","items","_x2","addTask","newText","_ref4","_callee4","newTaskId","_context4","newTask","item","abrupt","_x4","updateTask","_ref6","_callee6","_context6","_x6","_ref8","_callee8","_context8","_x8","Preloader","style","height","ToDoList","restoreState","deleteToDoList","newFilterValue","changeTask","objectSpread2","updateToDoList","_this$props$tasks","filtredTasks","filter","Fragment","common_Preloader_Preloader","ToDoListTitle","droppableId","droppableProps","ToDoList_ToDoListTasks_ToDoListTasks","common_AddNewItemForm_AddNewItemForm","ToDoList_ToDoListFooter_ToDoListFooter","connect","reducer","_ref5","_callee5","_context5","resultCode","_x5","_ref7","_callee7","_context7","_x7","userId","isAuth","captchaUrl","authError","setAuthUserData","getCaptchaUrlSuccess","setAuthError","getAuthUserData","_response$data","_login","sent","getCaptchaUrl","_ref3","_callee3","_context3","url","_x3","authReducer","action","Login","_useState","useState","_useState2","slicedToArray","setEmail","_useState3","_useState4","setPassword","_useState5","_useState6","setRememberMe","_useState7","_useState8","setCaptcha","useSelector","useDispatch","stylesHeader","src","alt","messages","Header","userInfo","App","addToDoList","onDragEnd","result","listId","endListPositionIndex","endListPositionId","newListId","listWhereDeleteTask","endNewTaskPositionId","listIndex","_listId","thisTaskId","endTaskPositionIndex","endTaskPositionId","destination","source","reorderList","reorderTask","tl","components_ToDoList_ToDoList","components_Header_Header","direction","components_Login_Login","todolist","newToDoList","_ref10","_callee10","_context10","_x10","_ref9","_callee9","_context9","_x9","Boolean","window","location","hostname","match","rootReducer","combineReducers","toConsumableArray","todo","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0553b742.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__Zb6ZJ\",\"message\":\"Preloader_message__XM94j\",\"five\":\"Preloader_five__2l-AP\",\"second\":\"Preloader_second__2c4sU\",\"like\":\"Preloader_like__1rSZs\",\"first\":\"Preloader_first__32m0g\",\"tap-upper-1\":\"Preloader_tap-upper-1__24l31\",\"tap-upper-2\":\"Preloader_tap-upper-2__3QCgz\",\"tap-upper-3\":\"Preloader_tap-upper-3__1lmn7\",\"tap-upper-4\":\"Preloader_tap-upper-4__16l6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList-task\":\"ToDoListTask_todoList-task__2GoPs\",\"editMode\":\"ToDoListTask_editMode__3N71D\",\"taskInfo\":\"ToDoListTask_taskInfo__3Xo5k\",\"taskTitle\":\"ToDoListTask_taskTitle__c1k9o\",\"priorityStyle\":\"ToDoListTask_priorityStyle__2rD-2\",\"priorityStyle1\":\"ToDoListTask_priorityStyle1__3S5CZ\",\"priorityStyle2\":\"ToDoListTask_priorityStyle2__1NRsq\",\"priorityStyle3\":\"ToDoListTask_priorityStyle3__Xi2Gs\",\"priorityStyle4\":\"ToDoListTask_priorityStyle4__2LD3n\",\"priorityStyle5\":\"ToDoListTask_priorityStyle5__3qQ1l\",\"done\":\"ToDoListTask_done__dnIHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3p-lt\",\"main\":\"Header_main__3w32D\",\"error\":\"Header_error__20WgW\",\"logout\":\"Header_logout__aifUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2-TOz\",\"info\":\"Login_info__wc-q-\",\"input\":\"Login_input__QoWlM\",\"checkbox\":\"Login_checkbox__1hFLo\",\"button\":\"Login_button__3wOUf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList-footer\":\"ToDoListFooter_todoList-footer__2kPFC\",\"filter-active\":\"ToDoListFooter_filter-active__17ebQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList-header\":\"ToDoListTitle_todoList-header__3qu1E\",\"todoList-header__title\":\"ToDoListTitle_todoList-header__title__2TgYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList-newTaskForm\":\"AddNewItemForm_todoList-newTaskForm__13B71\",\"error\":\"AddNewItemForm_error__1-rYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"ToDoList_todoList__3n6Oc\",\"content\":\"ToDoList_content__180RX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList-deleteTaskForm\":\"DeleteItemForm_todoList-deleteTaskForm__2M6aH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList-tasks\":\"ToDoListTasks_todoList-tasks__1HORG\"};","import React from 'react';\r\nimport styles from './DeleteItemForm.module.css';\r\n\r\ntype OwnPropsType = {\r\n    id: string\r\n    delete: (taskId: string) => void\r\n}\r\n\r\nclass DeleteItemForm extends React.Component<OwnPropsType> {\r\n\r\n    render = () => {\r\n        return (\r\n            <span className={styles['todoList-deleteTaskForm']}>\r\n                <button onClick={() => {\r\n                    this.props.delete(this.props.id)\r\n                }}\r\n                >X</button>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteItemForm;\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport '../../../../App.css';\r\nimport DeleteItemForm from '../../../common/DeleteItemForm/DeleteItemForm';\r\nimport {TaskType} from '../../../../types/entities';\r\nimport styles from './ToDoListTask.module.css';\r\nimport {DraggableProvided, DraggableStateSnapshot} from 'react-beautiful-dnd';\r\n\r\ntype OwnPropsType = {\r\n    task: TaskType\r\n    index: number\r\n    changeStatus: (newTask: TaskType, status: boolean) => void\r\n    changeTitle: (newTask: TaskType, title: string, priority: number) => void\r\n    deleteTask: (taskId: string) => void\r\n    provided: DraggableProvided\r\n    snapshot: DraggableStateSnapshot\r\n}\r\n\r\ntype StateType = {\r\n    isEditMode: boolean\r\n    title: string\r\n    priority: number\r\n}\r\n\r\nclass ToDoListTask extends React.Component<OwnPropsType, StateType> {\r\n    state = {\r\n        isEditMode: false,\r\n        title: this.props.task.title,\r\n        priority: this.props.task.priority\r\n    };\r\n\r\n    onIsDoneChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.props.changeStatus(this.props.task, e.currentTarget.checked)\r\n    };\r\n\r\n    onTitleChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({title: e.currentTarget.value});\r\n    };\r\n\r\n    onPriorityChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({priority: +e.currentTarget.value});\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({isEditMode: true});\r\n    };\r\n\r\n    deActivateEditMode = () => {\r\n        this.setState({isEditMode: false});\r\n        this.props.changeTitle(this.props.task, this.state.title, this.state.priority);\r\n    };\r\n\r\n    render = () => {\r\n        let isStatus = this.props.task.status === 2;\r\n        let isOpacity = isStatus ? `${styles['todoList-task']} ${styles.done}` : styles['todoList-task'];\r\n        let priorityStyle = [this.props.task.priority, 'priorityStyle' + this.props.task.priority];\r\n        return (\r\n            <div className={`${isOpacity} item ${this.props.snapshot.isDragging && 'dragging'}`}\r\n                 title={'Click to edit!'}\r\n                 ref={this.props.provided.innerRef}\r\n                 {...this.props.provided.draggableProps}\r\n                 {...this.props.provided.dragHandleProps}\r\n            >\r\n                {this.state.isEditMode\r\n                    ? <div className={styles.editMode}>\r\n                        <input\r\n                            type='checkbox'\r\n                            checked={isStatus}\r\n                            onChange={this.onIsDoneChanged}\r\n                        />\r\n                        <input onChange={this.onTitleChanged}\r\n                               autoFocus={true}\r\n                               value={this.state.title}\r\n                        />\r\n                        <span>priority: </span>\r\n                        <input onChange={this.onPriorityChanged}\r\n                               type='number'\r\n                               min='1' max='5'\r\n                               value={this.state.priority}\r\n                        />\r\n                        <button onClick={this.deActivateEditMode}>Save</button>\r\n                    </div>\r\n                    : <div className={styles.taskInfo} onClick={this.activateEditMode}>\r\n                        <div className={`${styles.priorityStyle} ${styles[priorityStyle[1]]}`}\r\n                             title={`Priority: ${this.props.task.priority}`}> </div>\r\n                        <div>\r\n                            <input\r\n                                type='checkbox'\r\n                                checked={isStatus}\r\n                                onChange={this.onIsDoneChanged}\r\n                            />\r\n                            <span className={styles.taskTitle}\r\n                                  onClick={this.activateEditMode}\r\n                            >{this.props.task.title}</span>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <DeleteItemForm delete={this.props.deleteTask}\r\n                                    id={this.props.task.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoListTask;\r\n\r\n","import React from 'react';\r\nimport '../../../App.css';\r\nimport ToDoListTask from './ToDoListTask/ToDoListTask';\r\nimport {TaskType} from '../../../types/entities';\r\nimport styles from './ToDoListTasks.module.css';\r\nimport {Draggable, DraggableProvided, DraggableStateSnapshot} from 'react-beautiful-dnd';\r\n\r\n\r\ntype OwnPropsType = {\r\n    tasks: Array<TaskType>\r\n    changeStatus: (newTask: TaskType, status: boolean) => void\r\n    changeTitle: (newTask: TaskType, title: string, priority: number) => void\r\n    deleteTask: (taskId: string) => void\r\n}\r\n\r\nclass ToDoListTasks extends React.Component<OwnPropsType> {\r\n    render = () => {\r\n        let tasksElements = this.props.tasks.map((t, index) => {\r\n            return (\r\n                <Draggable draggableId={t.id}\r\n                           index={index}\r\n                           key={t.id}>\r\n                    {(provided: DraggableProvided, snapshot: DraggableStateSnapshot) => (\r\n                        <ToDoListTask\r\n                            key={t.id}\r\n                            index={index}\r\n                            task={t}\r\n                            changeStatus={this.props.changeStatus}\r\n                            changeTitle={this.props.changeTitle}\r\n                            deleteTask={this.props.deleteTask}\r\n                            provided={provided}\r\n                            snapshot={snapshot}\r\n                        />\r\n                    )}\r\n                </Draggable>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className={styles['todoList-tasks']}>\r\n                {tasksElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ToDoListTasks;\r\n\r\n","import React from 'react';\r\nimport '../../../App.css';\r\nimport styles from './ToDoListFooter.module.css';\r\n\r\ntype StateType = {\r\n    isHidden: boolean\r\n}\r\n\r\ntype OwnPropsType = {\r\n    filterValue: string\r\n    changeFilter: (newFilterValue: string) => void\r\n}\r\n\r\nclass ToDoListFooter extends React.Component<OwnPropsType, StateType> {\r\n    state = {\r\n        isHidden: false\r\n    };\r\n\r\n    onAllFilterClick = () => {\r\n        this.props.changeFilter('All')\r\n    };\r\n    onCompletedFilterClick = () => {\r\n        this.props.changeFilter('Completed')\r\n    };\r\n    onActiveFilterClick = () => {\r\n        this.props.changeFilter('Active')\r\n    };\r\n    onShowFiltersClick = () => {\r\n        this.setState({isHidden: true})\r\n    };\r\n    onHideFiltersClick = () => {\r\n        this.setState({isHidden: false})\r\n    };\r\n\r\n    render = () => {\r\n        let classForAll = this.props.filterValue === 'All' ? styles['filter-active'] : '';\r\n        let classForCompleted = this.props.filterValue === 'Completed' ? styles['filter-active'] : '';\r\n        let classForActive = this.props.filterValue === 'Active' ? styles['filter-active'] : '';\r\n\r\n        return (\r\n            <div className={styles['todoList-footer']}>\r\n                {!this.state.isHidden && <div>\r\n                    <button\r\n                        className={classForAll}\r\n                        onClick={this.onAllFilterClick}\r\n                    >All\r\n                    </button>\r\n                    <button\r\n                        className={classForCompleted}\r\n                        onClick={this.onCompletedFilterClick}\r\n                    >Completed\r\n                    </button>\r\n                    <button\r\n                        className={classForActive}\r\n                        onClick={this.onActiveFilterClick}\r\n                    >Active\r\n                    </button>\r\n                </div>}\r\n                {!this.state.isHidden && <span onClick={this.onShowFiltersClick}>hide</span>}\r\n                {this.state.isHidden && <span onClick={this.onHideFiltersClick}>show</span>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoListFooter;\r\n\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport styles from './AddNewItemForm.module.css';\r\n\r\ntype OwnPropsType = {\r\n    addItem: (newTitle: string) => void\r\n}\r\n\r\ntype StateType = {\r\n    error: boolean\r\n    title: string\r\n}\r\n\r\nclass AddNewItemForm extends React.Component<OwnPropsType, StateType> {\r\n\r\n    state: StateType = {\r\n        error: false,\r\n        title: ''\r\n    };\r\n\r\n    onAddItemClick = () => {\r\n        let newTitle = this.state.title.trim();\r\n        if (newTitle === '') {\r\n            this.setState({error: true});\r\n        } else {\r\n            this.setState({\r\n                title: '',\r\n                error: false\r\n            });\r\n            this.props.addItem(newTitle);\r\n        }\r\n    };\r\n    onTitleChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            error: false,\r\n            title: e.currentTarget.value\r\n        })\r\n    };\r\n    onKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            this.onAddItemClick();\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        let errorClass = this.state.error ? `${styles.error}` : '';\r\n        return (\r\n            <div className={styles['todoList-newTaskForm']}>\r\n                <input\r\n                    type='text'\r\n                    placeholder='New item name'\r\n                    className={errorClass}\r\n                    onChange={this.onTitleChanged}\r\n                    onKeyPress={this.onKeyPress}\r\n                    value={this.state.title}\r\n                />\r\n                <button onClick={this.onAddItemClick}>Add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AddNewItemForm;\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport DeleteItemForm from '../../common/DeleteItemForm/DeleteItemForm';\r\nimport styles from './ToDoListTitle.module.css';\r\n\r\ntype OwnPropsType = {\r\n    title: string\r\n    idList: string\r\n    delete: () => void\r\n    updateTodolist: (newListTitle: string) => void\r\n}\r\n\r\ntype StateType = {\r\n    isEditMode: boolean\r\n    title: string\r\n}\r\n\r\nclass ToDoListHeader extends React.Component<OwnPropsType, StateType> {\r\n    state = {\r\n        isEditMode: false,\r\n        title: this.props.title\r\n    };\r\n\r\n    onTitleChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({title: e.currentTarget.value});\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({isEditMode: true});\r\n    };\r\n\r\n    deActivateEditMode = () => {\r\n        this.setState({isEditMode: false});\r\n        this.props.updateTodolist(this.state.title);\r\n    };\r\n\r\n\r\n    render = () => {\r\n        return <div className={styles['todoList-header']}>\r\n            <div className={styles['todoList-header__title']}>\r\n                {this.state.isEditMode\r\n                    ? <input onBlur={this.deActivateEditMode}\r\n                             onChange={this.onTitleChanged}\r\n                             autoFocus={true}\r\n                             value={this.state.title}/>\r\n                    : <h3 className={styles['todoList-header__title']}\r\n                          onClick={this.activateEditMode}\r\n                    >{this.props.title}</h3>\r\n                }\r\n            </div>\r\n            <div>\r\n                <DeleteItemForm id={this.props.idList}\r\n                                delete={this.props.delete}/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default ToDoListHeader;\r\n\r\n","import axios from 'axios';\r\nimport {TaskType, TodoType} from '../types/entities';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/',\r\n    withCredentials: true,\r\n    //headers: {'API-KEY': '641371ec-d5ac-4e54-91b7-f9eab8c7c8f0'} //my\r\n    headers: {'API-KEY': '421593e8-55e9-4a16-9adc-2959bf4b1754'} //test\r\n});\r\n\r\ntype CommonApiType<T> = {\r\n    resultCode: 0 | 1 | 100\r\n    messages: Array<string>\r\n    data: T\r\n}\r\n\r\ntype GetTasksType = {\r\n    items: Array<TaskType>\r\n    totalCount: number\r\n    error: string\r\n}\r\n\r\nexport const api = {\r\n    getTodolists() {\r\n        return instance.get<Array<TodoType>>('todo-lists/').then(res => res.data);\r\n    },\r\n    getTasks(todolistId: string) {\r\n        return instance.get<GetTasksType>(`todo-lists/${todolistId}/tasks`).then(res => res.data);\r\n    },\r\n    createTodolist(title: string) {\r\n        return instance.post<CommonApiType<{ item: TodoType }>>('todo-lists/', {title}).then(res => res.data);\r\n    },\r\n    createTask(newTaskTitle: string, todolistId: string) {\r\n        return instance.post<CommonApiType<{ item: TaskType }>>(`todo-lists/${todolistId}/tasks`, {title: newTaskTitle})\r\n            .then(res => res.data);\r\n    },\r\n    updateTodolist(todolistId: string, newListTitle: string) {\r\n        return instance.put(`todo-lists/${todolistId}`, {title: newListTitle}).then(res => res.data);\r\n    },\r\n    updateTask(task: TaskType) {\r\n        return instance.put<CommonApiType<{ item: TaskType }>>(`todo-lists/${task.todoListId}/tasks/${task.id}`, task)\r\n            .then(res => res.data);\r\n    },\r\n    deleteTodolist(todolistId: string) {\r\n        return instance.delete<CommonApiType<{}>>(`todo-lists/${todolistId}`).then(res => res.data);\r\n    },\r\n    deleteTask(todolistId: string, taskId: string) {\r\n        return instance.delete<CommonApiType<{}>>(`todo-lists/${todolistId}/tasks/${taskId}`).then(res => res.data);\r\n    },\r\n    reorderList(todolistId: string, putAfterItemId: string) {\r\n        return instance.put(`todo-lists/${todolistId}/reorder`,\r\n            {putAfterItemId: putAfterItemId}).then(res => res.data);\r\n    },\r\n    reorderTask(todolistId: string, taskId: string, putAfterItemId: string) {\r\n        return instance.put(`todo-lists/${todolistId}/tasks/${taskId}/reorder`,\r\n            {putAfterItemId: putAfterItemId}).then(res => res.data);\r\n    },\r\n\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => response.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: string | null = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.post(`auth/logout`);\r\n    },\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};","import {api} from '../api/api';\r\nimport {TaskType, TodoType} from '../types/entities';\r\nimport {AppStateType} from './store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nexport const SET_TODOLISTS_SUCCESS = 'TodoAPP/Todolist/SET-TODOLISTS-SUCCESS';\r\nexport const SET_TODOLISTS_ERROR = 'TodoAPP/Todolist/SET-TODOLISTS-ERROR';\r\n\r\nexport const SET_TASKS_SUCCESS = 'TodoAPP/Todolist/SET-TASKS-SUCCESS';\r\nexport const SET_TASKS_ERROR = 'TodoAPP/Todolist/SET-TASKS-ERROR';\r\n\r\nexport const ADD_TODOLIST_SUCCESS = 'TodoAPP/Todolist/ADD-TODOLIST-SUCCESS';\r\nexport const ADD_TODOLIST_ERROR = 'TodoAPP/Todolist/ADD-TODOLIST-ERROR';\r\n\r\nexport const ADD_TASK_SUCCESS = 'TodoAPP/Todolist/ADD-TASK-SUCCESS';\r\nexport const ADD_TASK_ERROR = 'TodoAPP/Todolist/ADD-TASK-ERROR';\r\n\r\nexport const UPDATE_TODOLIST_SUCCESS = 'TodoAPP/Todolist/UPDATE_TODOLIST-SUCCESS';\r\nexport const UPDATE_TODOLIST_ERROR = 'TodoAPP/Todolist/UPDATE_TODOLIST-ERROR';\r\n\r\nexport const UPDATE_TASK_SUCCESS = 'TodoAPP/Todolist/UPDATE-TASK-SUCCESS';\r\nexport const UPDATE_TASK_ERROR = 'TodoAPP/Todolist/UPDATE-TASK-ERROR';\r\n\r\nexport const DELETE_TODOLIST_SUCCESS = 'TodoAPP/Todolist/DELETE-TODOLIST-SUCCESS';\r\nexport const DELETE_TODOLIST_ERROR = 'TodoAPP/Todolist/DELETE-TODOLIST-ERROR';\r\n\r\nexport const DELETE_TASK_SUCCESS = 'TodoAPP/Todolist/DELETE-TASK-SUCCESS';\r\nexport const DELETE_TASK_ERROR = 'TodoAPP/Todolist/DELETE-TASK-ERROR';\r\n\r\nexport const TOGGLE_IS_LOADING = 'TodoAPP/Todolist/TOGGLE-IS-LOADING';\r\nexport const TOGGLE_IS_LOADING_LIST = 'TodoAPP/Todolist/TOGGLE-IS-LOADING-LIST';\r\n\r\n\r\ntype InitialStateType = {\r\n    todolists: Array<TodoType>\r\n    error: string\r\n    isLoading: boolean\r\n    isLoadingList: boolean\r\n}\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    todolists: [],\r\n    error: '',\r\n    isLoading: true,\r\n    isLoadingList: true\r\n};\r\n\r\nexport const reducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_TODOLISTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(todolist => {\r\n                    return {...todolist, tasks: []}\r\n                })\r\n            };\r\n        case SET_TODOLISTS_ERROR:\r\n            return {\r\n                ...state, error: action.error ? 'SET TODOLISTS ERROR. ' + action.error : ''\r\n            };\r\n\r\n        case SET_TASKS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todolist => {\r\n                    if (todolist.id !== action.todolistId) {\r\n                        return todolist\r\n                    } else {\r\n                        return {...todolist, tasks: action.tasks}\r\n                    }\r\n                })\r\n            };\r\n        case SET_TASKS_ERROR:\r\n            return {\r\n                ...state, error: action.error ? 'SET TASKS ERROR. ' + action.error : ''\r\n            };\r\n\r\n        case ADD_TODOLIST_SUCCESS:\r\n            return {...state, todolists: [...state.todolists, action.newToDoList]};\r\n        case ADD_TODOLIST_ERROR:\r\n            return {...state, error: action.error ? 'ADD TODOLIST ERROR. ' + action.error : ''};\r\n\r\n        case ADD_TASK_SUCCESS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                    if (todo.id !== action.todolistId) {\r\n                        return todo\r\n                    } else {\r\n                        return {...todo, tasks: [...todo.tasks, action.newTask]}\r\n                    }\r\n                })\r\n            };\r\n        case ADD_TASK_ERROR:\r\n            return {...state, error: action.error ? 'ADD TASK ERROR. ' + action.error : ''};\r\n\r\n        case UPDATE_TODOLIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                    if (todo.id !== action.todoListId) {\r\n                        return todo\r\n                    } else {\r\n                        return {\r\n                            ...todo,\r\n                            title: action.newTitle\r\n                        }\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_TODOLIST_ERROR:\r\n            return {...state, error: action.error ? 'UPDATE TODOLIST ERROR. ' + action.error : ''};\r\n\r\n        case UPDATE_TASK_SUCCESS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                    if (todo.id !== action.task.todoListId) {\r\n                        return todo\r\n                    } else {\r\n                        return {\r\n                            ...todo,\r\n                            tasks: todo.tasks.map(task => {\r\n                                if (task.id !== action.task.id) {\r\n                                    return task;\r\n                                } else {\r\n                                    return action.task;\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_TASK_ERROR:\r\n            return {...state, error: action.error ? 'UPDATE TASK ERROR. ' + action.error : ''};\r\n\r\n        case DELETE_TODOLIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(todo => todo.id !== action.todolistId)\r\n            };\r\n        case DELETE_TODOLIST_ERROR:\r\n            return {...state, error: action.error ? 'DELETE TODOLIST ERROR. ' + action.error : ''};\r\n\r\n        case DELETE_TASK_SUCCESS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                    if (todo.id === action.todolistId) {\r\n                        return {\r\n                            ...todo,\r\n                            tasks: todo.tasks.filter(task => task.id !== action.taskId)\r\n                        }\r\n                    } else return todo;\r\n                })\r\n            };\r\n\r\n        case DELETE_TASK_ERROR:\r\n            return {...state, error: action.error ? 'DELETE TASK ERROR. ' + action.error : ''};\r\n\r\n        case TOGGLE_IS_LOADING:\r\n            return {...state, isLoading: action.isLoading};\r\n        case TOGGLE_IS_LOADING_LIST:\r\n            return {...state, isLoadingList: action.isLoading};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// ActionCreators\r\n\r\ntype ActionsType =\r\n    SetToDoListsSuccessActionType\r\n    | SetToDoListsErrorActionType\r\n    | SetTasksSuccessActionType\r\n    | SetTasksErrorActionType\r\n    | AddToDoListSuccessActionType\r\n    | AddToDoListErrorActionType\r\n    | AddTaskSuccessActionType\r\n    | AddTaskErrorActionType\r\n    | UpdateToDoListSuccessActionType\r\n    | UpdateToDoListErrorActionType\r\n    | UpdateTaskSuccessActionType\r\n    | UpdateTaskErrorActionType\r\n    | DeleteToDoListSuccessActionType\r\n    | DeleteToDoListErrorActionType\r\n    | DeleteTaskSuccessActionType\r\n    | DeleteTaskErrorActionType\r\n    | ToggleIsLoadingActionType\r\n    | ToggleIsLoadingListActionType\r\n\r\ntype SetToDoListsSuccessActionType = {\r\n    type: typeof SET_TODOLISTS_SUCCESS\r\n    todolists: Array<TodoType>\r\n}\r\ntype SetToDoListsErrorActionType = {\r\n    type: typeof SET_TODOLISTS_ERROR\r\n    error: string\r\n}\r\n\r\ntype SetTasksSuccessActionType = {\r\n    type: typeof SET_TASKS_SUCCESS\r\n    todolistId: string\r\n    tasks: Array<TaskType>\r\n}\r\ntype SetTasksErrorActionType = {\r\n    type: typeof SET_TASKS_ERROR\r\n    error: string\r\n}\r\n\r\ntype AddToDoListSuccessActionType = {\r\n    type: typeof ADD_TODOLIST_SUCCESS\r\n    newToDoList: TodoType\r\n}\r\ntype AddToDoListErrorActionType = {\r\n    type: typeof ADD_TODOLIST_ERROR\r\n    error: string\r\n}\r\n\r\ntype AddTaskSuccessActionType = {\r\n    type: typeof ADD_TASK_SUCCESS\r\n    todolistId: string\r\n    newTask: TaskType\r\n}\r\ntype AddTaskErrorActionType = {\r\n    type: typeof ADD_TASK_ERROR\r\n    error: string\r\n}\r\n\r\ntype UpdateToDoListSuccessActionType = {\r\n    type: typeof UPDATE_TODOLIST_SUCCESS\r\n    todoListId: string\r\n    newTitle: string\r\n}\r\ntype UpdateToDoListErrorActionType = {\r\n    type: typeof UPDATE_TODOLIST_ERROR\r\n    error: string\r\n}\r\n\r\ntype UpdateTaskSuccessActionType = {\r\n    type: typeof UPDATE_TASK_SUCCESS\r\n    task: TaskType\r\n}\r\ntype UpdateTaskErrorActionType = {\r\n    type: typeof UPDATE_TASK_ERROR\r\n    error: string\r\n}\r\n\r\ntype DeleteToDoListSuccessActionType = {\r\n    type: typeof DELETE_TODOLIST_SUCCESS\r\n    todolistId: string\r\n}\r\ntype DeleteToDoListErrorActionType = {\r\n    type: typeof DELETE_TODOLIST_ERROR\r\n    error: string\r\n}\r\n\r\ntype DeleteTaskSuccessActionType = {\r\n    type: typeof DELETE_TASK_SUCCESS\r\n    todolistId: string\r\n    taskId: string\r\n}\r\ntype DeleteTaskErrorActionType = {\r\n    type: typeof DELETE_TASK_ERROR\r\n    error: string\r\n}\r\ntype ToggleIsLoadingActionType = {\r\n    type: typeof TOGGLE_IS_LOADING\r\n    isLoading: boolean\r\n}\r\ntype ToggleIsLoadingListActionType = {\r\n    type: typeof TOGGLE_IS_LOADING_LIST\r\n    isLoading: boolean\r\n}\r\n\r\n\r\nexport const setToDoListsSuccess = (todolists: Array<TodoType>): SetToDoListsSuccessActionType => {\r\n    return {\r\n        type: SET_TODOLISTS_SUCCESS,\r\n        todolists\r\n    };\r\n};\r\nexport const setToDoListsError = (error: string): SetToDoListsErrorActionType => {\r\n    return {type: SET_TODOLISTS_ERROR, error};\r\n};\r\n\r\nexport const setTasksSuccess = (todolistId: string, tasks: Array<TaskType>): SetTasksSuccessActionType => {\r\n    return {\r\n        type: SET_TASKS_SUCCESS,\r\n        todolistId,\r\n        tasks\r\n    };\r\n};\r\nexport const setTasksError = (error: string): SetTasksErrorActionType => {\r\n    return {type: SET_TASKS_ERROR, error};\r\n};\r\n\r\nexport const addToDoListSuccess = (newToDoList: TodoType): AddToDoListSuccessActionType => {\r\n    return {\r\n        type: ADD_TODOLIST_SUCCESS,\r\n        newToDoList\r\n    }\r\n};\r\nexport const addToDoListError = (error: string): AddToDoListErrorActionType => {\r\n    return {type: ADD_TODOLIST_ERROR, error};\r\n};\r\n\r\nexport const addTaskSuccess = (todolistId: string, newTask: TaskType): AddTaskSuccessActionType => {\r\n    return {\r\n        type: ADD_TASK_SUCCESS,\r\n        todolistId,\r\n        newTask\r\n    };\r\n};\r\nexport const addTaskError = (error: string): AddTaskErrorActionType => {\r\n    return {type: ADD_TASK_ERROR, error};\r\n};\r\n\r\nexport const updateToDoListSuccess = (todoListId: string, newTitle: string): UpdateToDoListSuccessActionType => {\r\n    return {type: UPDATE_TODOLIST_SUCCESS, todoListId, newTitle};\r\n};\r\nexport const updateToDoListError = (error: string): UpdateToDoListErrorActionType => {\r\n    return {type: UPDATE_TODOLIST_ERROR, error};\r\n};\r\n\r\nexport const updateTaskSuccess = (task: TaskType): UpdateTaskSuccessActionType => {\r\n    return {type: UPDATE_TASK_SUCCESS, task};\r\n};\r\nexport const updateTaskError = (error: string): UpdateTaskErrorActionType => {\r\n    return {type: UPDATE_TASK_ERROR, error};\r\n};\r\n\r\nexport const deleteToDoListSuccess = (todolistId: string): DeleteToDoListSuccessActionType => {\r\n    return {\r\n        type: DELETE_TODOLIST_SUCCESS,\r\n        todolistId\r\n    };\r\n};\r\nexport const deleteToDoListError = (error: string): DeleteToDoListErrorActionType => {\r\n    return {type: DELETE_TODOLIST_ERROR, error};\r\n};\r\n\r\nexport const deleteTaskSuccess = (todolistId: string, taskId: string): DeleteTaskSuccessActionType => {\r\n    return {\r\n        type: DELETE_TASK_SUCCESS,\r\n        todolistId,\r\n        taskId\r\n    };\r\n};\r\nexport const deleteTaskError = (error: string): DeleteTaskErrorActionType => {\r\n    return {type: DELETE_TASK_ERROR, error};\r\n};\r\nexport const toggleIsLoading = (isLoading: boolean): ToggleIsLoadingActionType => {\r\n    return {type: TOGGLE_IS_LOADING, isLoading: isLoading};\r\n};\r\nexport const toggleIsLoadingList = (isLoading: boolean): ToggleIsLoadingListActionType => {\r\n    return {type: TOGGLE_IS_LOADING_LIST, isLoading: isLoading};\r\n};\r\n\r\n// Thunk\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>;\r\ntype ThunkDispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>;\r\n\r\nexport const setToDoLists = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    dispatch(toggleIsLoading(true));\r\n    await api.getTodolists()\r\n        .then(res => {\r\n            dispatch(setToDoListsSuccess(res));\r\n        })\r\n        .catch(res => {\r\n            dispatch(setToDoListsError(res));\r\n        });\r\n    dispatch(toggleIsLoading(false));\r\n};\r\n\r\nexport const setTasks = (idList: string): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    dispatch(toggleIsLoadingList(true));\r\n    await api.getTasks(idList)\r\n        .then(res => {\r\n            dispatch(setTasksSuccess(idList, res.items));\r\n        })\r\n        .catch(res => {\r\n            dispatch(setTasksError(res));\r\n        });\r\n    dispatch(toggleIsLoadingList(false));\r\n};\r\n\r\nexport const addToDoList = (title: string): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    dispatch(toggleIsLoading(true));\r\n    await api.createTodolist(title)\r\n        .then(res => {\r\n            let todolist = res.data.item;\r\n            dispatch(addToDoListSuccess(todolist));\r\n            dispatch(addToDoListError(''));\r\n        })\r\n        .catch(res => {\r\n            dispatch(addToDoListError(res));\r\n        });\r\n    dispatch(toggleIsLoading(false));\r\n};\r\n\r\nexport const addTask = (newText: string, idList: string): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    dispatch(toggleIsLoading(true));\r\n    let newTaskId = '';\r\n    await api.createTask(newText, idList)\r\n        .then(res => {\r\n            dispatch(addTaskSuccess(idList, res.data.item));\r\n            dispatch(addTaskError(''));\r\n            newTaskId = res.data.item.id;\r\n        })\r\n        .catch(res => {\r\n            dispatch(addTaskError(res));\r\n        });\r\n    dispatch(toggleIsLoading(false));\r\n    return newTaskId;\r\n};\r\n\r\nexport const updateToDoList = (idList: string, newListTitle: string): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    dispatch(toggleIsLoading(true));\r\n    await api.updateTodolist(idList, newListTitle)\r\n        .then(res => {\r\n            if (res.resultCode === 0) {\r\n                dispatch(updateToDoListSuccess(idList, newListTitle));\r\n                dispatch(updateToDoListError(''));\r\n            }\r\n        })\r\n        .catch(res => {\r\n            dispatch(updateToDoListError(res));\r\n        });\r\n    dispatch(toggleIsLoading(false));\r\n};\r\n\r\nexport const updateTask = (newTask: TaskType): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    dispatch(toggleIsLoading(true));\r\n    await api.updateTask(newTask)\r\n        .then(res => {\r\n            dispatch(updateTaskSuccess(res.data.item));\r\n            dispatch(updateTaskError(''));\r\n        })\r\n        .catch(res => {\r\n            dispatch(updateTaskError(res));\r\n        });\r\n    dispatch(toggleIsLoading(false));\r\n};\r\n\r\nexport const deleteToDoList = (idList: string): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    dispatch(toggleIsLoading(true));\r\n    await api.deleteTodolist(idList)\r\n        .then(() => {\r\n            dispatch(deleteToDoListSuccess(idList));\r\n            dispatch(deleteToDoListError(''));\r\n        })\r\n        .catch(res => {\r\n            dispatch(deleteToDoListError(res));\r\n        });\r\n    dispatch(toggleIsLoading(false));\r\n};\r\n\r\nexport const deleteTask = (idList: string, taskId: string): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    dispatch(toggleIsLoading(true));\r\n    await api.deleteTask(idList, taskId)\r\n        .then(() => {\r\n            dispatch(deleteTaskSuccess(idList, taskId));\r\n            dispatch(deleteTaskError(''));\r\n        })\r\n        .catch(res => {\r\n            dispatch(deleteTaskError(res));\r\n        });\r\n    dispatch(toggleIsLoading(false));\r\n};\r\n\r\nexport const reorderList = (todolistId: string, putAfterItemId: string): ThunkType =>\r\n    async (dispatch: ThunkDispatchType) => {\r\n        dispatch(toggleIsLoading(true));\r\n        await api.reorderList(todolistId, putAfterItemId)\r\n            .then(() => {\r\n                dispatch(setToDoLists());\r\n                dispatch(setToDoListsError(''));\r\n            })\r\n            .catch(res => {\r\n                dispatch(setToDoListsError(res));\r\n            });\r\n        dispatch(toggleIsLoading(false));\r\n    };\r\n\r\nexport const reorderTask = (todolistId: string, taskId: string, putAfterItemId: string): ThunkType =>\r\n    async (dispatch: ThunkDispatchType) => {\r\n        dispatch(toggleIsLoading(true));\r\n        await api.reorderTask(todolistId, taskId, putAfterItemId)\r\n            .then(() => {\r\n                dispatch(setTasks(todolistId));\r\n                dispatch(setTasksError(''));\r\n            })\r\n            .catch(res => {\r\n                dispatch(setTasksError(res));\r\n            });\r\n        dispatch(toggleIsLoading(false));\r\n    };\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\n\r\ntype OwnPropsType = {\r\n    height: string\r\n}\r\n\r\nclass Preloader extends React.Component<OwnPropsType> {\r\n    render = () => {\r\n        return (<div className={styles.wrapper} style={{height: this.props.height}}>\r\n            <div className={styles.five}>\r\n                <div className={styles.first}> </div>\r\n                <div className={styles.first}> </div>\r\n                <div className={styles.first}> </div>\r\n                <div className={styles.first}> </div>\r\n                <div className={styles.second}> </div>\r\n                <div className={styles.like}> </div>\r\n            </div>\r\n            <div className={styles.message}>Waiting for server response...</div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport '../../App.css';\r\nimport ToDoListTasks from './ToDoListTasks/ToDoListTasks';\r\nimport ToDoListFooter from './ToDoListFooter/ToDoListFooter';\r\nimport AddNewItemForm from '../common/AddNewItemForm/AddNewItemForm';\r\nimport ToDoListTitle from './ToDoListTitle/ToDoListTitle';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    addTask, deleteTask, deleteToDoList, setTasks, updateTask, updateToDoList\r\n} from '../../redux/reducer';\r\nimport {TaskType, TodoType} from '../../types/entities';\r\nimport {AppStateType} from '../../redux/store';\r\nimport styles from './ToDoList.module.css';\r\nimport {DraggableStateSnapshot, Droppable, DraggableProvided} from 'react-beautiful-dnd';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\ntype StateType = {\r\n    state: Array<TodoType>\r\n    filterValue: string\r\n}\r\n\r\ntype OwnPropsType = {\r\n    idList: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    index: number\r\n    provided: DraggableProvided\r\n    snapshot: DraggableStateSnapshot\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    isLoadingList: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setTasks: (idList: string) => void\r\n    addTask: (newText: string, idList: string) => void\r\n    updateToDoList: (idList: string, newListTitle: string) => void\r\n    updateTask: (newTask: TaskType) => void\r\n    deleteToDoList: (idList: string) => void\r\n    deleteTask: (idList: string, taskId: string) => void\r\n}\r\n\r\ntype PropsType = OwnPropsType & MapStatePropsType & MapDispatchPropsType\r\n\r\nclass ToDoList extends React.Component<PropsType, StateType> {\r\n\r\n    componentDidMount() {\r\n        this.restoreState();\r\n    }\r\n\r\n    restoreState = () => {\r\n        this.props.setTasks(this.props.idList);\r\n    };\r\n\r\n    state = {\r\n        state: [],\r\n        filterValue: 'All'\r\n    };\r\n\r\n    addTask = (newText: string) => {\r\n        this.props.addTask(newText, this.props.idList)\r\n    };\r\n\r\n    deleteToDoList = () => {\r\n        this.props.deleteToDoList(this.props.idList);\r\n    };\r\n\r\n    deleteTask = (taskId: string) => {\r\n        this.props.deleteTask(this.props.idList, taskId)\r\n    };\r\n\r\n    changeFilter = (newFilterValue: string) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        });\r\n    };\r\n\r\n    changeStatus = (newTask: TaskType, status: boolean) => {\r\n        this.changeTask({...newTask, status: status ? 2 : 0});\r\n    };\r\n\r\n    changeTitle = (newTask: TaskType, title: string, priority: number) => {\r\n        this.changeTask({...newTask, title: title, priority: priority})\r\n    };\r\n\r\n    changeTask = (newTask: TaskType) => {\r\n        this.props.updateTask(newTask)\r\n    };\r\n\r\n    updateTodolist = (newListTitle: string) => {\r\n        this.props.updateToDoList(this.props.idList, newListTitle)\r\n    };\r\n\r\n\r\n    render = () => {\r\n        let {tasks = []} = this.props;\r\n\r\n        let filtredTasks = tasks.filter(t => {\r\n            switch (this.state.filterValue) {\r\n                case 'Completed':\r\n                    return t.status === 2;\r\n                case 'Active':\r\n                    return t.status === 0;\r\n                default:\r\n                    return true;\r\n            }\r\n        });\r\n        return (<>\r\n                <div className={styles.todoList}\r\n                     ref={this.props.provided.innerRef}\r\n                     {...this.props.provided.draggableProps}>\r\n                    <div className={styles.content} key={this.props.idList}>\r\n                        {this.props.isLoadingList\r\n                            ? <Preloader height={'35vh'}/>\r\n                            : <>\r\n                                <div  {...this.props.provided.dragHandleProps}>\r\n                                    <ToDoListTitle title={this.props.title}\r\n                                                   idList={this.props.idList}\r\n                                                   delete={this.deleteToDoList}\r\n                                                   updateTodolist={this.updateTodolist}/>\r\n                                </div>\r\n                                <Droppable droppableId={this.props.index + ''} type={'task'}>\r\n                                    {(provided) => (\r\n                                        <div ref={provided.innerRef}\r\n                                             {...provided.droppableProps}>\r\n                                            <ToDoListTasks\r\n                                                tasks={filtredTasks}\r\n                                                changeStatus={this.changeStatus}\r\n                                                changeTitle={this.changeTitle}\r\n                                                deleteTask={this.deleteTask}\r\n                                            />\r\n                                            {provided.placeholder}\r\n                                        </div>)}\r\n                                </Droppable>\r\n                                <AddNewItemForm addItem={this.addTask}/>\r\n                            </>}\r\n                        <ToDoListFooter\r\n                            filterValue={this.state.filterValue}\r\n                            changeFilter={this.changeFilter}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isLoadingList: state.reducer.isLoadingList\r\n    }\r\n};\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n    setTasks, addTask, updateToDoList,\r\n    updateTask, deleteToDoList, deleteTask\r\n})(ToDoList);\r\n\r\n","import {api} from '../api/api';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\nimport {AppStateType} from './store';\r\nimport {setToDoLists} from './reducer';\r\n\r\nconst SET_USER_DATA = 'TodoAPP/Todolist/auth/SET-USER-DATA';\r\nconst GET_CAPTCHA_URL = 'TodoAPP/Todolist/auth/GET-CAPTCHA-URL';\r\nconst SET_AUTH_ERROR = 'TodoAPP/Todolist/auth/SET-AUTH-ERROR';\r\n\r\ntype InitialStateType = {\r\n    userId?: string | null\r\n    email?: string | null\r\n    login?: string | null\r\n    isAuth?: boolean\r\n    captchaUrl?: string | null\r\n    authError: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n    authError: ''\r\n};\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userId: action.userId,\r\n                email: action.email,\r\n                login: action.login,\r\n                isAuth: action.isAuth\r\n            };\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            };\r\n        case SET_AUTH_ERROR:\r\n            return {\r\n                ...state, authError: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsType =\r\n    setAuthUserDataActionType\r\n    | getCaptchaUrlActionType\r\n    | setAuthErrorActionType\r\n\r\ntype setAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA\r\n    userId: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype getCaptchaUrlActionType = {\r\n    type: typeof GET_CAPTCHA_URL\r\n    captchaUrl: string\r\n}\r\ntype setAuthErrorActionType = {\r\n    type: typeof SET_AUTH_ERROR\r\n    error: string\r\n}\r\n\r\n// ActionCreators\r\n\r\nexport const setAuthUserData = (userId: string | null, email: string | null,\r\n                                login: string | null, isAuth: boolean): setAuthUserDataActionType =>\r\n    ({type: SET_USER_DATA, userId, email, login, isAuth});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): getCaptchaUrlActionType =>\r\n    ({type: GET_CAPTCHA_URL, captchaUrl});\r\n\r\nexport const setAuthError = (error: string): setAuthErrorActionType =>\r\n    ({type: SET_AUTH_ERROR, error});\r\n\r\n// Thunk\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>;\r\ntype ThunkDispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>;\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    let response = await api.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n        dispatch(setToDoLists());\r\n    }\r\n};\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType =>\r\n    async (dispatch: ThunkDispatchType) => {\r\n        const response = await api.login(email, password, rememberMe, captcha);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n            dispatch(setAuthError(''));\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl());\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error';\r\n            dispatch(setAuthError('Auth error. ' + message));\r\n        }\r\n    };\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    const response = await api.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    let response = await api.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport styles from './Login.module.css';\r\nimport stylesHeader from '../Header/Header.module.css';\r\nimport {AppStateType} from '../../redux/store';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const [captcha, setCaptcha] = useState('');\r\n\r\n    const captchaUrl = useSelector((state: AppStateType): string | null | undefined =>\r\n        state.authReducer.captchaUrl);\r\n    const isLoading = useSelector((state: AppStateType): boolean => state.reducer.isLoading);\r\n    const error = useSelector((state: AppStateType): string => state.authReducer.authError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (<>\r\n        {isLoading\r\n            ? <Preloader height={'100vh'}/>\r\n            : <div className={styles.login}>\r\n                <div className={styles.info}>\r\n                    <h1>TODOLIST</h1>\r\n                    <p>For test this app, enter</p>\r\n                    <p>Login: <b>vl.bkmebel@bk.ru</b></p>\r\n                    <p>Password: <b>test_account</b></p>\r\n                    <p>or</p>\r\n                    <p>Login: <b>free@samuraijs.com</b></p>\r\n                    <p>Password: <b>free</b></p>\r\n                </div>\r\n\r\n                {error && <div className={stylesHeader.error}>\r\n                    Error: {error}\r\n                </div>}\r\n\r\n                <input type='email' className={styles.input}\r\n                       onChange={e => setEmail(e.currentTarget.value)}\r\n                       value={email} placeholder={'Email'}/>\r\n                <input type='password' className={styles.input}\r\n                       onChange={e => setPassword(e.currentTarget.value)}\r\n                       value={password} placeholder={'Password'}/>\r\n                <div className={styles.checkbox}>\r\n                    <label>\r\n                        <input type='checkbox' checked={rememberMe}\r\n                               onChange={e => setRememberMe(e.currentTarget.checked)}/>\r\n                        <span>remember me</span>\r\n                    </label>\r\n                </div>\r\n\r\n                {captchaUrl && <img src={captchaUrl} alt='captcha'/>}\r\n                {captchaUrl && <input className={styles.input} type='text'\r\n                                      onChange={e => setCaptcha(e.currentTarget.value)}\r\n                                      value={captcha} placeholder={'Enter captcha'}/>}\r\n\r\n                <div>\r\n                    <button className={styles.button}\r\n                            onClick={() => dispatch(login(email, password, rememberMe, captcha))}>\r\n                        Login\r\n                    </button>\r\n                </div>\r\n            </div>}\r\n    </>)\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\nimport styles from './Header.module.css';\r\nimport {AppStateType} from '../../redux/store';\r\n\r\nconst Header = () => {\r\n\r\n    const error = useSelector((state: AppStateType): string =>\r\n        state.reducer.error);\r\n    const login = useSelector((state: AppStateType): string | null | undefined => state.authReducer.login);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return (<>\r\n        <div className={styles.header}>\r\n            {error ? <div className={styles.error}> Error: {error} </div> : <div> </div>}\r\n\r\n            <div className={styles.main}>\r\n                <div className={styles.userInfo}>\r\n                    Welcome, <b>{login}</b>\r\n                </div>\r\n                <button className={styles.logout}\r\n                        onClick={() => dispatch(logout())}>Logout\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </>)\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './App.css';\r\nimport ToDoList from './components/ToDoList/ToDoList';\r\nimport AddNewItemForm from './components/common/AddNewItemForm/AddNewItemForm';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    addToDoList, setToDoLists, reorderTask, setToDoListsError,\r\n    deleteTask, addTask, updateTask, reorderList, toggleIsLoading\r\n} from './redux/reducer';\r\nimport {getAuthUserData} from './redux/auth-reducer';\r\nimport {TaskType, TodoType} from './types/entities';\r\nimport {AppStateType} from './redux/store';\r\nimport {DragDropContext, Draggable, Droppable, DraggableStateSnapshot, DraggableProvided} from 'react-beautiful-dnd';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport Login from './components/Login/Login';\r\nimport Header from './components/Header/Header';\r\n\r\ntype MapStatePropsType = {\r\n    todolists: Array<TodoType>\r\n    isLoading: boolean\r\n    isAuth?: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setToDoLists: () => void\r\n    addToDoList: (title: string) => void\r\n    reorderTask: (todolistId: string, taskId: string, putAfterItemId: string) => void\r\n    deleteTask: (idList: string, taskId: string) => void\r\n    addTask: (newText: string, idList: string) => any\r\n    updateTask: (newTask: TaskType) => void\r\n    reorderList: (todolistId: string, putAfterItemId: string) => void\r\n    toggleIsLoading: (isLoading: boolean) => void\r\n    getAuthUserData: () => void\r\n    setToDoListsError: (error: string) => void\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType;\r\n\r\nclass App extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.restoreState();\r\n    }\r\n\r\n    restoreState = () => {\r\n        this.props.setToDoLists();\r\n    };\r\n\r\n    addToDoList = (title: string) => {\r\n        this.props.addToDoList(title);\r\n    };\r\n\r\n    onDragEnd = async (result: any) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        if (result.destination.index === result.source.index\r\n            && result.destination.droppableId === result.source.droppableId) {\r\n            return;\r\n        }\r\n\r\n        // if reorder lists\r\n        if (result.type === 'column') {\r\n            let listId = result.draggableId;\r\n            let endListPositionIndex = result.destination.index;\r\n            let endListPositionId;\r\n\r\n            if (result.destination.index === 0) {\r\n                endListPositionId = '';\r\n            } else if (result.source.index > result.destination.index) {\r\n                endListPositionId = this.props.todolists[endListPositionIndex - 1].id;\r\n            } else endListPositionId = this.props.todolists[endListPositionIndex].id;\r\n\r\n            await this.props.reorderList(listId, endListPositionId);\r\n        }\r\n\r\n        // if reorder tasks\r\n        if (result.type === 'task') {\r\n\r\n            // if user want drag task in other list\r\n            if (result.destination.droppableId !== result.source.droppableId) {\r\n\r\n                // add this task in new list\r\n                let task = this.props.todolists[result.source.droppableId].tasks[result.source.index];\r\n                let newListId = this.props.todolists[result.destination.droppableId].id;\r\n                let newTaskId = await this.props.addTask(task.title, newListId);\r\n\r\n                // set this task priority in new list\r\n                if (task.priority !== 1) {\r\n                    await this.props.updateTask({\r\n                        ...task,\r\n                        todoListId: newListId,\r\n                        id: newTaskId,\r\n                        priority: task.priority\r\n                    })\r\n                }\r\n\r\n                // delete this task in old list\r\n                let listWhereDeleteTask = this.props.todolists[result.source.droppableId].id;\r\n                await this.props.deleteTask(listWhereDeleteTask, result.draggableId);\r\n\r\n                // reorder this task on it position\r\n                let endNewTaskPositionId;\r\n                if (result.destination.index === 0) {\r\n                    endNewTaskPositionId = '';\r\n                } else endNewTaskPositionId = this.props.todolists[result.destination.droppableId].tasks[result.destination.index - 1].id;\r\n                await this.props.reorderTask(newListId, newTaskId, endNewTaskPositionId);\r\n\r\n            } else {\r\n                let listIndex = result.destination.droppableId;\r\n                let listId = this.props.todolists[listIndex].id;\r\n\r\n                let thisTaskId = result.draggableId;\r\n                let endTaskPositionIndex = result.destination.index;\r\n\r\n                let endTaskPositionId;\r\n                if (endTaskPositionIndex === 0) {\r\n                    endTaskPositionId = '';\r\n                } else if (result.source.index > endTaskPositionIndex) {\r\n                    endTaskPositionId = this.props.todolists[listIndex].tasks[endTaskPositionIndex - 1].id;\r\n                } else endTaskPositionId = this.props.todolists[listIndex].tasks[endTaskPositionIndex].id;\r\n                await this.props.reorderTask(listId, thisTaskId, endTaskPositionId);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    render = () => {\r\n        if (!this.props.isAuth) {\r\n            this.props.getAuthUserData();\r\n            this.props.setToDoListsError('');\r\n        }\r\n\r\n        const todolists = this.props\r\n            .todolists\r\n            .map((tl, index) =>\r\n                <Draggable draggableId={tl.id}\r\n                           index={index}\r\n                           key={tl.id}>\r\n                    {(provided: DraggableProvided, snapshot: DraggableStateSnapshot) => (\r\n                        <ToDoList key={tl.id}\r\n                                  index={index}\r\n                                  idList={tl.id}\r\n                                  title={tl.title}\r\n                                  tasks={tl.tasks}\r\n                                  provided={provided}\r\n                                  snapshot={snapshot}\r\n                        />\r\n                    )}\r\n                </Draggable>);\r\n        return (<>\r\n            {!this.props.isAuth\r\n                ? <Login/>\r\n                : this.props.isLoading\r\n                    ? <Preloader height={'100vh'}/>\r\n                    : <div className='App'>\r\n                        <Header/>\r\n                        <DragDropContext onDragEnd={this.onDragEnd}>\r\n                            <Droppable droppableId={'all-columns'} direction={'horizontal'} type={'column'}>\r\n                                {(provided) => (\r\n                                    <div className='todolists'\r\n                                         {...provided.droppableProps}\r\n                                         ref={provided.innerRef}>\r\n                                        {todolists}\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                )}\r\n                            </Droppable>\r\n                            <AddNewItemForm addItem={this.addToDoList}/>\r\n                        </DragDropContext>\r\n                    </div>}\r\n        </>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        todolists: state.reducer.todolists,\r\n        isLoading: state.reducer.isLoading,\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n};\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\r\n    setToDoLists,\r\n    addToDoList,\r\n    reorderTask,\r\n    reorderList,\r\n    addTask,\r\n    updateTask,\r\n    deleteTask,\r\n    toggleIsLoading,\r\n    getAuthUserData,\r\n    setToDoListsError\r\n})(App);\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {reducer} from './reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    reducer,\r\n    authReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}